name: Windows Build
on: [push, pull_request]

jobs:
  build:
    name: Build (${{ matrix.os }}, llvm-${{ matrix.llvm }}, cmake=${{ matrix.cmake }}, cuda=${{ matrix.cuda }}, static=${{ matrix.static }}, slib=${{ matrix.slib }}, ${{ matrix.lua }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        llvm: ['13']
        cmake: ['1']    
        cuda: ['0', '1']
        static: ['0', '1']
        slib: ['0', '1']
        lua: ['luajit', 'moonjit']
        exclude:
          - os: 'macos-10.15'
            llvm: '5.0'
        include:
          - os: 'windows-latest'
            llvm: '13'
    steps:
      - uses: actions/checkout@v2
      - if: ${{ matrix.os == 'windows-latest' }}
        run: ./windows.bat
        env:
          LLVM_CONFIG: llvm-config-${{ matrix.llvm }}
          LLVM_VERSION: ${{ matrix.llvm }}
          VS_MAJOR_VERSION: 16
          BINARY_SOURCE_USER: vovkos
          CLANG: clang-${{ matrix.llvm }}
          USE_CMAKE: ${{ matrix.cmake }}
          USE_CUDA: ${{ matrix.cuda }}
          STATIC_LLVM: ${{ matrix.static }}
          STATIC_LUAJIT: ${{ matrix.static }}
          SLIB_INCLUDE_LLVM: ${{ matrix.slib }}
          SLIB_INCLUDE_LUAJIT: ${{ matrix.slib }}
          TERRA_LUA: ${{ matrix.lua }}
      - if: ${{ matrix.os != 'windows-latest' }}
        run: bash travis.sh
        env:
          LLVM_CONFIG: llvm-config-${{ matrix.llvm }}
          LLVM_VERSION: ${{ matrix.llvm }}
          VS_MAJOR_VERSION: 16
          BINARY_SOURCE_USER: vovkos
          CLANG: clang-${{ matrix.llvm }}
          USE_CMAKE: ${{ matrix.cmake }}
          USE_CUDA: ${{ matrix.cuda }}
          STATIC_LLVM: ${{ matrix.static }}
          STATIC_LUAJIT: ${{ matrix.static }}
          SLIB_INCLUDE_LLVM: ${{ matrix.slib }}
          SLIB_INCLUDE_LUAJIT: ${{ matrix.slib }}
          TERRA_LUA: ${{ matrix.lua }}
      - uses: actions/upload-artifact@v2
        with:
          name: terra-${{ matrix.os }}-llvm-${{ matrix.llvm }}
          path: |
            *.zip
